// <auto-generated />
using System;
using MergeRequestService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MergeRequestService.Migrations
{
    [DbContext(typeof(MergeRequestContext))]
    [Migration("20190111143239_InitCreate")]
    partial class InitCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MergeRequestService.Models.MergeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChangeSetId");

                    b.Property<int>("DevChangeSetId");

                    b.Property<string>("SourceBranch");

                    b.Property<bool>("IsToQa");

                    b.Property<string>("Memo");

                    b.Property<int?>("SubmitterId");

                    b.Property<string>("TargetBranch");

                    b.HasKey("Id");

                    b.HasIndex("SubmitterId");

                    b.ToTable("MergeRequests");
                });

            modelBuilder.Entity("MergeRequestService.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MergeRequestService.Models.MergeRequest", b =>
                {
                    b.HasOne("MergeRequestService.Models.User", "Submitter")
                        .WithMany()
                        .HasForeignKey("SubmitterId");
                });
#pragma warning restore 612, 618
        }
    }
}
